# Базовая схема продукта
schema product {
    # Устанавливаем язык для всех полей данной схемы
    field language type string {
        indexing: "ru" | set_language
    }
    # Базовый документ продукта
    document product {
        # Структура доступности в магазине
        struct availabilities {
            # Уникальный идентификатор магазина
            field id type long {}
            # Название магазина
            field name type string {}
            # Единиц товара
            field count type int {}
        }
        # Идентификатор товара
        field id type long {
            indexing: summary | attribute
        }
        # Название товара
        field name type string {
            indexing: summary | index
            index: enable-bm25
        }
        # Описание товара
        field description type string {
            indexing: summary | index
            index: enable-bm25
        }
        # Цена
        field price type string {
            indexing: summary | attribute
        }
        # Доступность в магазинах
        field availabilities type array<availabilities> {
            indexing: summary
        }
    }
    # Сводка, которая выводит только поле с описанием и его токены
    document-summary get-tokens {
        summary description {}
        summary description_tokens {
            source: description
            tokens
        }
        from-disk
    }
    # Набор полей, по которым будет выполняться текстовый поиск
    fieldset default {
        fields: name, description
    }
    # Ранжирование результата при помощи nativeRank
    rank-profile native inherits default {
        first-phase {
            expression: nativeRank(name, description)
        }
        # Выводит показатель ранжирования по каждому полю
        match-features {
            nativeRank(name)
            nativeRank(description)
        }
    }
    # Ранжирование результата с помощью bm25
    rank-profile bm25 inherits default {
        first-phase {
            expression: bm25(name) + bm25(description)
        }
        # Выводит показатель ранжирования по каждому полю
        match-features {
            bm25(name)
            bm25(description)
        }
    }
}